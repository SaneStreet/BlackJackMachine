// Class : Spil

/*
    Indeholder spillets logik og flow

*/

#nullable enable
class Spil
{
    private Kortbunke kortbunke = new Kortbunke();
    private Spiller dealer = new Spiller("Dealer");
    private Spiller? spiller;


    public void Run()
    {

        while (true)
        {
            Console.Clear();
            Console.WriteLine("üÉè BlackJackMachine 1.0 üÉè");
            Console.WriteLine("V√¶lg en mulighed: (1-3)");
            Console.WriteLine("1. Nyt spil");
            Console.WriteLine("2. Se regler");
            Console.WriteLine("3. Afslut\n");
            int valg = Convert.ToInt32(Console.ReadLine());
            switch (valg)
            {
                case 1:
                    Console.WriteLine("Navn p√• spiller?: \n");
                    string? nySpiller = Console.ReadLine();
                    if (nySpiller == "")
                    {
                        nySpiller = "Spiller";
                    }
                    spiller = new Spiller(nySpiller);

                    Console.Clear();
                    bool iSpil = true;

                    while (iSpil)
                    {
                        SpilRunde();

                        Console.WriteLine("\nVil du spille igen? (J/N): ");
                        string nytspil = Console.ReadLine()?.Trim().ToLower() ?? "n";
                        iSpil = nytspil == "j";
                    }
                    break;
                case 2:
                    Console.Clear();
                    Console.WriteLine("M√•let er at f√• en h√•ndv√¶rdi t√¶ttere p√• 21 end dealeren, uden at overskride 21.");
                    Console.WriteLine("Kort 2-10 har deres p√•lydende v√¶rdi, billedkort (J, Q, K) giver 10 point, og et es (A) kan v√¶re 1 eller 11, afh√¶ngigt af hvad der er bedst for h√•nden.");
                    Console.WriteLine("Hvis spilleren overstiger 21 (bust), taber de √∏jeblikkeligt.");
                    Console.WriteLine("N√•r spilleren v√¶lger stand, tr√¶kker dealeren kort, indtil h√•nden har en v√¶rdi p√• mindst 17.");
                    Console.WriteLine("Hvis dealeren overstiger 21, vinder spilleren.");
                    Console.WriteLine("Hvis ingen g√•r bust, vinder den med den h√∏jeste v√¶rdi. Uafgjort resulterer i en push (ingen vinder)");
                    Console.WriteLine("\nTryk p√• en tast for at forts√¶tte..");
                    Console.ReadKey();
                    Console.Clear();
                    break;
                case 3:
                    Console.WriteLine("Tak for nu. Byebye. üëã");
                    Environment.Exit(0);
                    break;
                default:
                    Console.WriteLine("Ugyldigt valg. Tryk p√• en tast for at forts√¶tte..");
                    Console.ReadLine();
                    break;
            }

        }
    }

    public void SpilRunde()
    {
        spiller.T√∏mH√•nd();
        dealer.T√∏mH√•nd();
        kortbunke = new Kortbunke();

        // start deal
        spiller.H√•nd.Add(kortbunke.Tr√¶kKort());
        dealer.H√•nd.Add(kortbunke.Tr√¶kKort());
        spiller.H√•nd.Add(kortbunke.Tr√¶kKort());
        dealer.H√•nd.Add(kortbunke.Tr√¶kKort());

        Console.WriteLine($"\nDealers h√•nd: {dealer.H√•nd.kortP√•H√•nden[1]} üÇ†");
        Console.WriteLine($"{spiller.Navn}s h√•nd: {spiller.H√•nd} ({spiller.H√•nd.VinderV√¶rdi()})");

        // check for blackjack
        if (spiller.H√•nd.ErBlackjack() || dealer.H√•nd.ErBlackjack())
        {
            DealerH√•nd();
            if (spiller.H√•nd.ErBlackjack() && !dealer.H√•nd.ErBlackjack())
            {
                Console.WriteLine("Blackjack! Du vinder! üëè");
            }
            else if (!spiller.H√•nd.ErBlackjack() && dealer.H√•nd.ErBlackjack())
            {
                Console.WriteLine("Dealer har Blackjack! Du taber! üòû");
            }
            //TODO: else if ingen har bust, men h√∏jeste kort vinder
            else
            {
                Console.WriteLine("Begge har Blackjack! Uafgjort! ü§ù");
            }
            return;
        }

        bool spillerHandling = false;
        while (!spillerHandling)
        {
            Console.WriteLine("Handling? (h)it / (s)tand \n");
            string handling = Console.ReadLine()?.Trim().ToLower() ?? "s";

            if (handling == "h")
            {
                spiller.H√•nd.Add(kortbunke.Tr√¶kKort());
                Console.WriteLine($"{spiller.Navn}s h√•nd: {spiller.H√•nd} ({spiller.H√•nd.VinderV√¶rdi()})");
                if (spiller.H√•nd.ErBust())
                {
                    Console.WriteLine("Bust! Du tabte üôÅ");
                    return;
                }
            }
            else
            {
                spillerHandling = true;
            }
        }
        DealerH√•nd();

        while (dealer.H√•nd.VinderV√¶rdi() < 21)
        {
            var k = kortbunke.Tr√¶kKort();
            dealer.H√•nd.Add(k);
            Console.WriteLine($"Dealer trak: {k} ({dealer.H√•nd.VinderV√¶rdi()})");
        }

        int spillerV√¶rdi = spiller.H√•nd.VinderV√¶rdi();
        int dealerV√¶rdi = dealer.H√•nd.VinderV√¶rdi();
        Console.WriteLine($"\nResultat: {spiller.Navn} {spillerV√¶rdi} - Dealer {dealerV√¶rdi}");

        if (dealer.H√•nd.ErBust() || spillerV√¶rdi > dealerV√¶rdi)
        {
            Console.WriteLine("Tillykke du vandt! üëè");
        }
        else if (spillerV√¶rdi == dealerV√¶rdi)
        {
            Console.WriteLine("Uafgjort.");
        }
        else
        {
            Console.WriteLine("Dealer vandt ");
        }
    }

    public void DealerH√•nd()
    {
        Console.WriteLine($"Dealers h√•nd: {dealer.H√•nd} ({dealer.H√•nd.VinderV√¶rdi()})");
    }
}